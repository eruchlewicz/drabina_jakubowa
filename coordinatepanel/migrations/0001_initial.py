# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-10-28 15:42
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dj', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=50, verbose_name='Nazwa')),
                ('main_coordinator_was_there', models.BooleanField(default=False, verbose_name='Koordynator był na turnusie')),
                ('auxiliary_coordinator_was_there', models.BooleanField(default=False, verbose_name='Koordynator pomocniczy był na turnusie')),
                ('begin_date', models.DateTimeField(verbose_name='Data rozpoczęcia')),
                ('end_date', models.DateTimeField(verbose_name='Data zakończenia')),
                ('training_duration', models.IntegerField(blank=True, default=14, verbose_name='Szkolenie (h)')),
                ('volunteers', models.IntegerField(blank=True, default=0, verbose_name='Liczba wolontariuszy')),
                ('participants', models.IntegerField(blank=True, default=0, verbose_name='Liczba podopiecznych')),
                ('batch_price', models.FloatField(blank=True, default=700, verbose_name='Koszt pobytu')),
            ],
            options={
                'verbose_name': 'Turnus',
                'verbose_name_plural': 'Turnusy',
            },
        ),
        migrations.CreateModel(
            name='BatchParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment', models.FloatField(blank=True, default=100, verbose_name='Kwota zaliczki')),
                ('is_part_paid', models.BooleanField(default=False, verbose_name='Zapłacono zaliczkę')),
                ('full_cost', models.FloatField(blank=True, default=700, verbose_name='Pełny koszt')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Zapłacono')),
                ('payment_method', models.CharField(blank=True, choices=[('G', 'Gotówka'), ('K', 'Karta płatnicza'), ('P', 'Przelew bankowy')], max_length=1, null=True, verbose_name='Metoda płatności')),
                ('room_sex', models.CharField(blank=True, choices=[('K', 'Kobieta'), ('M', 'Mężczyzna')], max_length=1, null=True, verbose_name='Płeć osób w pokoju')),
                ('room_person_category', models.CharField(blank=True, choices=[('W', 'Wolontariusz'), ('P', 'Podopieczny')], max_length=1, null=True, verbose_name='Kategoria pokoju')),
                ('batch_begin_date', models.DateTimeField(blank=True, null=True, verbose_name='Data przyjazdu na turnus')),
                ('batch_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Data opuszczenia turnusu')),
                ('unique_key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Unikalny klucz')),
                ('reserve_list', models.BooleanField(default=False, verbose_name='Lista rezerwowa')),
                ('note', models.TextField(blank=True, max_length=500, null=True, verbose_name='Notatka')),
                ('sign_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Kiedy zapisano')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batchpar', to='coordinatepanel.Batch', verbose_name='Turnus')),
            ],
            options={
                'verbose_name': 'Podopieczny na turnusie',
                'verbose_name_plural': 'Turnus - podopieczny',
            },
        ),
        migrations.CreateModel(
            name='BatchVolunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_sex', models.CharField(blank=True, choices=[('K', 'Kobieta'), ('M', 'Mężczyzna')], max_length=1, null=True, verbose_name='Płeć osób w pokoju')),
                ('room_person_category', models.CharField(blank=True, choices=[('W', 'Wolontariusz'), ('P', 'Podopieczny')], max_length=1, null=True, verbose_name='Kategoria pokoju')),
                ('batch_begin_date', models.DateTimeField(blank=True, null=True, verbose_name='Data przyjazdu na turnus')),
                ('batch_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Data opuszczenia turnusu')),
                ('batch_days', models.IntegerField(blank=True, default=10, verbose_name='Liczba dni spędzonych z podopiecznymi')),
                ('add_days', models.IntegerField(blank=True, default=0, verbose_name='Liczba organizacyjnych dni przed turnusem (tylko koordynator)')),
                ('training_days', models.IntegerField(blank=True, default=2, verbose_name='Ilość dni szkolenia (piątek, sobota)')),
                ('was_there', models.BooleanField(default=False, verbose_name='Wolontariusz pojawił się na turnusie')),
                ('nights', models.IntegerField(blank=True, default=0, verbose_name='Liczba dyżurów nocnych')),
                ('daily_activities', models.BooleanField(default=False, verbose_name='pomoc w czynnościach codziennych, tj. pomoc w ubieraniu się, jedzeniu, myciu, poruszaniu się')),
                ('free_time_organise', models.BooleanField(default=False, verbose_name='organizacja czasu wolnego podopiecznym i wolontariuszom')),
                ('sport_activities', models.BooleanField(default=False, verbose_name='zajęcia sportowo – rekreacyjne dla wszystkich uczestników wyjazdu')),
                ('games_organise', models.BooleanField(default=False, verbose_name='organizowanie i prowadzenie gier, zabaw, konkursów w terenie jak i w budynku ośrodka')),
                ('walking_trips', models.BooleanField(default=False, verbose_name='wycieczki piesze po okolicy')),
                ('physical_activities', models.BooleanField(default=False, verbose_name='udział w zajęciach ruchowych, integracyjnych, orientacyjnych w obszarze wolontariusz-podopieczny')),
                ('games_mobilisation', models.BooleanField(default=False, verbose_name='aktywizowanie podopiecznych przez włączanie ich do zabaw ruchowych i intelektualnych')),
                ('night_shift', models.BooleanField(default=False, verbose_name='nocny dyżur w celu opiekuńczo-kontrolnym wszystkich podopiecznych')),
                ('kitchen_cleaning', models.BooleanField(default=False, verbose_name='pomoc w pracach kuchennych, utrzymaniu czystości stołówki')),
                ('general_cleaning', models.BooleanField(default=False, verbose_name='dbanie o czystość na terenie ośrodka (pokoje podopiecznych, łazienki, korytarze)')),
                ('music_classes', models.BooleanField(default=False, verbose_name='prowadzenie spotkań umuzykalniających')),
                ('photographing', models.BooleanField(default=False, verbose_name='tworzenie fotoreportażu podczas turnusu')),
                ('funpage', models.BooleanField(default=False, verbose_name="uaktualnianie strony internetowej, fanpage'a na Facebook'u itp.")),
                ('savoir_vivre', models.BooleanField(default=False, verbose_name='udział w szkoleniu wolontariuszy z zakresu savoir-vivre z niepełnosprawnymi')),
                ('care_training', models.BooleanField(default=False, verbose_name='udział w szkoleniu wolontariuszy z zakresu pielęgnacji osób niepełnosprawnych i starszych')),
                ('unique_key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Unikalny klucz')),
                ('reserve_list', models.BooleanField(default=False, verbose_name='Lista rezerwowa')),
                ('note', models.TextField(blank=True, max_length=500, null=True, verbose_name='Notatka')),
                ('sign_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Kiedy zapisano')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batchvol', to='coordinatepanel.Batch', verbose_name='Turnus')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dj.Room', verbose_name='Pokój')),
            ],
            options={
                'verbose_name': 'Wolontariusz na turnusie',
                'verbose_name_plural': 'Turnus - wolontariusz',
            },
        ),
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('pesel', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{11}$ || ^$')], verbose_name='PESEL')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu')),
                ('email_address', models.EmailField(blank=True, max_length=40, null=True, verbose_name='Adres e-mail')),
                ('city', models.CharField(max_length=40, verbose_name='Miasto')),
                ('zip_code', models.CharField(max_length=6, verbose_name='Kod pocztowy')),
                ('address', models.CharField(max_length=30, verbose_name='Adres')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Koordynator',
                'verbose_name_plural': 'Koordynatorzy',
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu')),
                ('email_address', models.EmailField(max_length=40, verbose_name='Adres e-mail')),
            ],
            options={
                'verbose_name': 'Dyrektor',
                'verbose_name_plural': 'Dyrektorzy',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Lekarz',
                'verbose_name_plural': 'Lekarze',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nazwa')),
                ('begin_date', models.DateTimeField(verbose_name='Data rozpoczęcia')),
                ('end_date', models.DateTimeField(verbose_name='Data zakończenia')),
                ('volunteers', models.IntegerField(blank=True, default=0, verbose_name='Liczba wolontariuszy')),
                ('participants', models.IntegerField(blank=True, default=0, verbose_name='Liczba podopiecznych')),
                ('info', models.TextField(blank=True, max_length=250, null=True, verbose_name='Informacje')),
                ('price', models.FloatField(blank=True, default=0, verbose_name='Koszt')),
                ('auxiliary_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Coordinator', verbose_name='Koordynator p.')),
                ('doctor', models.ManyToManyField(blank=True, to='coordinatepanel.Doctor', verbose_name='Lekarze')),
                ('main_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ev_coo', to='coordinatepanel.Coordinator', verbose_name='Koordynator')),
            ],
            options={
                'verbose_name': 'Wydarzenie',
                'verbose_name_plural': 'Wydarzenia',
            },
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_cost', models.FloatField(blank=True, default=0, verbose_name='Pełny koszt')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Zapłacono')),
                ('sign_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Kiedy zapisano')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evpartic', to='coordinatepanel.Event', verbose_name='Wydarzenie')),
            ],
            options={
                'verbose_name': 'Podopieczny na wydarzeniu',
                'verbose_name_plural': 'Wydarzenie - podopieczny',
            },
        ),
        migrations.CreateModel(
            name='EventVolunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_cost', models.FloatField(blank=True, default=0, verbose_name='Pełny koszt')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Zapłacono')),
                ('sign_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Kiedy zapisano')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evvol', to='coordinatepanel.Event', verbose_name='Wydarzenie')),
            ],
            options={
                'verbose_name': 'Wolontariusz na wydarzeniu',
                'verbose_name_plural': 'Wydarzenie - wolontariusz',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, verbose_name='Nazwa')),
                ('city', models.CharField(max_length=40, verbose_name='Miasto')),
                ('zip_code', models.CharField(max_length=6, verbose_name='Kod pocztowy')),
                ('address', models.CharField(max_length=30, verbose_name='Adres')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Director', verbose_name='Dyrektor')),
            ],
            options={
                'verbose_name': 'Placówka',
                'verbose_name_plural': 'Placówki',
            },
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Pielęgniarz',
                'verbose_name_plural': 'Pielęgniarze',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('pesel', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(regex='^[0-9]{11}$ || ^$')], verbose_name='PESEL')),
                ('sex', models.CharField(choices=[('K', 'Kobieta'), ('M', 'Mężczyzna')], max_length=1, verbose_name='Płeć')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu')),
                ('guardian_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Imię i nazwisko opiekuna')),
                ('guardian_phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu opiekuna')),
                ('email_address', models.EmailField(blank=True, max_length=40, null=True, verbose_name='Adres e-mail')),
                ('city', models.CharField(max_length=40, verbose_name='Miasto')),
                ('zip_code', models.CharField(max_length=6, verbose_name='Kod pocztowy')),
                ('address', models.CharField(max_length=30, verbose_name='Adres')),
                ('communication', models.CharField(choices=[('OK', 'Nie ma problemów z komunikacją'), ('TR', 'Komunikuje się z trudem'), ('KS', 'Korzysta z książki do komunikacji'), ('MI', 'Komunikuje się przy pomocy języka migowego'), ('N', 'Brak możliwości komunikacji')], max_length=2, verbose_name='Komunikacja')),
                ('details', models.TextField(blank=True, max_length=200, null=True, verbose_name='Opis')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='gallery', verbose_name='Zdjęcie')),
                ('foundation', models.TextField(blank=True, max_length=200, null=True, verbose_name='Dane fundacji np. do wystawienia zaświadczenia')),
                ('how_know_dj', models.CharField(choices=[('Z', 'Od znajomych wolontariuszy'), ('P', 'Od znajomych podopiecznych'), ('K', 'Z kościoła'), ('D', 'Ze spotkania w moim duszpasterstwie'), ('AD', 'Z Anielskiej Domówki'), ('US', 'Z uczelni lub ze szkoły'), ('FB', 'Z Facebooka'), ('TV', 'Z radia, TV, prasy'), ('S', 'Z tej strony internetowej'), ('YT', 'Z filmu na YouTube'), ('I', 'Inne')], max_length=2, verbose_name='Skąd zna DJ?')),
                ('is_first_time', models.BooleanField(default=True, verbose_name='Pierwszy raz')),
                ('drugs', models.CharField(choices=[('T', 'Tak'), ('N', 'Nie'), ('BD', 'Brak danych')], default=1, max_length=2, verbose_name='Czy przyjmuje leki?')),
                ('mental_disability', models.BooleanField(default=False, verbose_name='Niepełnosprawność intelektualna')),
                ('not_need_help', models.BooleanField(default=False, verbose_name='Nie potrzebuje pomocy przy codziennych czynnościach')),
                ('wheelchair', models.BooleanField(default=False, verbose_name='Porusza się na wózku')),
                ('disabled_hands', models.BooleanField(default=False, verbose_name='Niesprawne ręce')),
                ('crutches', models.BooleanField(default=False, verbose_name='Porusza się o kulach')),
                ('disabled_sight', models.BooleanField(default=False, verbose_name='Niesprawny wzrok')),
                ('disabled_hearing', models.BooleanField(default=False, verbose_name='Niesprawny słuch')),
                ('epilepsy', models.BooleanField(default=False, verbose_name='Możliwe ataki padaczki')),
            ],
            options={
                'verbose_name': 'Podopieczny',
                'verbose_name_plural': 'Podopieczni',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('pesel', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(regex='^[0-9]{11}$ || ^$')], verbose_name='PESEL')),
                ('sex', models.CharField(choices=[('K', 'Kobieta'), ('M', 'Mężczyzna')], max_length=1, verbose_name='Płeć')),
                ('age', models.CharField(choices=[('ZM', 'Nie mam skończonych 16 lat'), ('M', 'Skończone 16 lat'), ('D', 'Skończone 18 lat')], max_length=2, verbose_name='Wiek')),
                ('city', models.CharField(max_length=40, verbose_name='Miasto')),
                ('zip_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Kod pocztowy')),
                ('address', models.CharField(blank=True, max_length=30, null=True, verbose_name='Adres')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu')),
                ('email_address', models.EmailField(max_length=40, verbose_name='Adres e-mail')),
                ('education', models.CharField(blank=True, choices=[('P', 'Podstawowe'), ('G', 'Gimnazjalne'), ('S', 'Średnie'), ('Z', 'Zawodowe'), ('PM', 'Pomaturalne'), ('W', 'Wyższe'), ('I', 'Inne')], max_length=2, null=True, verbose_name='Wykształcenie')),
            ],
            options={
                'verbose_name': 'Uczestnik',
                'verbose_name_plural': 'Uczestnik',
            },
        ),
        migrations.CreateModel(
            name='Priest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('pesel', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{11}$ || ^$')], verbose_name='PESEL')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu')),
                ('email_address', models.EmailField(blank=True, max_length=40, null=True, verbose_name='Adres e-mail')),
                ('city', models.CharField(max_length=40, verbose_name='Miasto')),
                ('zip_code', models.CharField(max_length=6, verbose_name='Kod pocztowy')),
                ('address', models.CharField(max_length=30, verbose_name='Adres')),
            ],
            options={
                'verbose_name': 'Ksiądz',
                'verbose_name_plural': 'Księża',
            },
        ),
        migrations.CreateModel(
            name='RetreatOrMusicTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nazwa')),
                ('begin_date', models.DateTimeField(verbose_name='Data rozpoczęcia')),
                ('end_date', models.DateTimeField(verbose_name='Data zakończenia')),
                ('people', models.IntegerField(blank=True, default=0, verbose_name='Liczba uczestników')),
                ('info', models.TextField(blank=True, max_length=250, null=True, verbose_name='Informacje')),
                ('type', models.CharField(choices=[('R', 'Rekolekcje'), ('W', 'Warsztaty')], max_length=1, verbose_name='Typ')),
                ('base_price', models.FloatField(blank=True, default=0, verbose_name='Cena bazowa')),
                ('sleeping_bag_price', models.FloatField(blank=True, default=0, verbose_name='Cena z własnym śpiworem')),
                ('nights_price', models.FloatField(blank=True, default=0, verbose_name='Cena z noclegiem')),
                ('additional_night', models.FloatField(blank=True, default=0, verbose_name='Dodatkowy nocleg')),
                ('auxiliary_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Coordinator', verbose_name='Koordynator pomocniczy')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Institution', verbose_name='Placówka')),
                ('main_coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='music_coo', to='coordinatepanel.Coordinator', verbose_name='Koordynator')),
            ],
            options={
                'verbose_name': 'Warsztaty/rekolekcje',
                'verbose_name_plural': 'Warsztaty/rekolekcje',
            },
        ),
        migrations.CreateModel(
            name='RetreatOrMusicTrainingPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_sex', models.CharField(blank=True, choices=[('K', 'Kobieta'), ('M', 'Mężczyzna')], max_length=1, null=True, verbose_name='Płeć osób w pokoju')),
                ('how_know_training', models.CharField(blank=True, choices=[('Z', 'Od znajomych wolontariuszy'), ('K', 'Z kościoła'), ('D', 'Ze spotkania w moim duszpasterstwie'), ('AD', 'Z Anielskiej Domówki'), ('US', 'Z uczelni lub ze szkoły'), ('FB', 'Z Facebooka'), ('TV', 'Z radia, TV, prasy'), ('S', 'Z tej strony internetowej'), ('YT', 'Z filmu na YouTube'), ('I', 'Inne')], max_length=2, null=True, verbose_name='Skąd dowiedziałeś/aś się o warsztatach?')),
                ('description', models.TextField(blank=True, max_length=250, null=True, verbose_name='Dodatkowe informacje')),
                ('voice', models.CharField(blank=True, choices=[('S', 'Sopran'), ('A', 'Alt'), ('T', 'Tenor'), ('B', 'Bas'), ('N', 'Nie wiem')], max_length=2, null=True, verbose_name='Głos')),
                ('experience', models.CharField(blank=True, choices=[('T', 'Tak'), ('N', 'Nie')], max_length=2, null=True, verbose_name='Doświadczenie sceniczne')),
                ('instrument', models.CharField(blank=True, max_length=30, null=True, verbose_name='Instrument')),
                ('is_first_time', models.BooleanField(default=True, verbose_name='Pierwszy raz na rekolekcjach')),
                ('how_know_dj', models.CharField(blank=True, choices=[('Z', 'Od znajomych wolontariuszy'), ('K', 'Z kościoła'), ('D', 'Ze spotkania w moim duszpasterstwie'), ('AD', 'Z Anielskiej Domówki'), ('US', 'Z uczelni lub ze szkoły'), ('FB', 'Z Facebooka'), ('TV', 'Z radia, TV, prasy'), ('S', 'Z tej strony internetowej'), ('YT', 'Z filmu na YouTube'), ('I', 'Inne')], max_length=2, null=True, verbose_name='Skąd znasz DJ?')),
                ('study', models.BooleanField(default=False, verbose_name='Uczę sie')),
                ('work', models.BooleanField(default=False, verbose_name='Pracuję')),
                ('babysitting', models.BooleanField(default=False, verbose_name='Opiekuję się dziećmi')),
                ('pensioner', models.BooleanField(default=False, verbose_name='Jestem emerytem/rencistą')),
                ('unemployed', models.BooleanField(default=False, verbose_name='Jestem bezrobotny')),
                ('another_work', models.TextField(blank=True, max_length=100, null=True, verbose_name='Inne zajęcie')),
                ('guardian_phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu opiekuna')),
                ('communion', models.BooleanField(default=False, verbose_name='Duszpasterstwo')),
                ('communion_description', models.TextField(blank=True, max_length=250, null=True, verbose_name='Jakie wspólnoty/duszpasterstwa')),
                ('sing_or_play', models.BooleanField(default=False, verbose_name='Gram lub śpiewam')),
                ('description_why', models.TextField(blank=True, max_length=250, null=True, verbose_name='Dlaczego chcesz zostać animatorem')),
                ('accommodation', models.CharField(choices=[('N', 'Nie potrzebuję noclegu, mieszkam niedaleko'), ('S', 'Mam śpiwór i materac, potrzebuję tylko miejsca do spania'), ('L', 'Chcę się wygodnie wyspać i mogę za to zapłacić')], max_length=2, verbose_name='Opcja noclegu')),
                ('saturday_sunday', models.CharField(choices=[('T', 'Tak, zostanę na śniadanie i wspólną Mszę'), ('N', 'Nie, wracam nocą do domu')], default='N', max_length=2, verbose_name='Nocleg sobota/niedziela')),
                ('total_cost', models.FloatField(blank=True, default=0, verbose_name='Pełny koszt')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Zapłacono')),
                ('data_processing_agreement', models.BooleanField(default=False, verbose_name='Zgoda na przetwarzanie danych osobowych')),
                ('photographing_agreement', models.BooleanField(default=False, verbose_name='Zgoda na fotografowanie')),
                ('sign_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Kiedy zapisano')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_train', to='coordinatepanel.Person', verbose_name='Uczestnik')),
                ('retreat_or_music_training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train_person', to='coordinatepanel.RetreatOrMusicTraining', verbose_name='Warsztaty/rekolekcje')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dj.Room', verbose_name='Pokój')),
            ],
            options={
                'verbose_name': 'Uczestnik warsztatów lub rekolekcji',
                'verbose_name_plural': 'Warsztaty/rekolekcje - uczestnik',
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='Imię')),
                ('surname', models.CharField(max_length=30, verbose_name='Nazwisko')),
                ('pesel', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(regex='^[0-9]{11}$ || ^$')], verbose_name='PESEL')),
                ('sex', models.CharField(choices=[('K', 'Kobieta'), ('M', 'Mężczyzna')], max_length=1, verbose_name='Płeć')),
                ('age', models.CharField(choices=[('ZM', 'Nie mam skończonych 16 lat'), ('M', 'Skończone 16 lat'), ('D', 'Skończone 18 lat')], max_length=2, verbose_name='Wiek')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu')),
                ('email_address', models.EmailField(max_length=40, verbose_name='Adres e-mail')),
                ('city', models.CharField(max_length=40, verbose_name='Miasto')),
                ('zip_code', models.CharField(max_length=6, verbose_name='Kod pocztowy')),
                ('address', models.CharField(max_length=30, verbose_name='Adres')),
                ('education', models.CharField(choices=[('P', 'Podstawowe'), ('G', 'Gimnazjalne'), ('S', 'Średnie'), ('Z', 'Zawodowe'), ('PM', 'Pomaturalne'), ('W', 'Wyższe'), ('I', 'Inne')], max_length=2, verbose_name='Wykształcenie')),
                ('is_first_time', models.BooleanField(default=True, verbose_name='Pierwszy raz')),
                ('how_know_dj', models.CharField(choices=[('Z', 'Od znajomych wolontariuszy'), ('P', 'Od znajomych podopiecznych'), ('K', 'Z kościoła'), ('D', 'Ze spotkania w moim duszpasterstwie'), ('AD', 'Z Anielskiej Domówki'), ('US', 'Z uczelni lub ze szkoły'), ('FB', 'Z Facebooka'), ('TV', 'Z radia, TV, prasy'), ('S', 'Z tej strony internetowej'), ('YT', 'Z filmu na YouTube'), ('I', 'Inne')], max_length=2, verbose_name='Skąd znasz DJ?')),
                ('description', models.TextField(blank=True, max_length=250, null=True, verbose_name='Opis')),
                ('data_processing_agreement', models.BooleanField(default=False, verbose_name='Zgoda na przetwarzanie danych osobowych')),
                ('photographing_agreement', models.BooleanField(default=False, verbose_name='Zgoda na fotografowanie')),
                ('study', models.BooleanField(default=False, verbose_name='Uczę sie')),
                ('work', models.BooleanField(default=False, verbose_name='Pracuję')),
                ('babysitting', models.BooleanField(default=False, verbose_name='Opiekuję się dziećmi')),
                ('pensioner', models.BooleanField(default=False, verbose_name='Jestem emerytem/rencistą')),
                ('unemployed', models.BooleanField(default=False, verbose_name='Jestem bezrobotny')),
                ('another_work', models.TextField(blank=True, max_length=100, null=True, verbose_name='Inne zajęcie')),
                ('physical_health', models.BooleanField(default=False, verbose_name='Zdrowie fizyczne')),
                ('mental_health', models.BooleanField(default=False, verbose_name='Zdrowie psychiczne')),
                ('drugs', models.CharField(choices=[('T', 'Tak'), ('N', 'Nie')], default=1, max_length=2, verbose_name='Czy przyjmujesz leki?')),
                ('guardian_phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Numer telefonu opiekuna')),
                ('first_air_training', models.BooleanField(default=False, verbose_name='Szkolenie z pierwszej pomocy')),
                ('sanitary_book', models.BooleanField(default=False, verbose_name='Książeczka sanepidowska')),
                ('training_courses', models.TextField(blank=True, max_length=200, null=True, verbose_name='Inne szkolenia i kursy')),
                ('experience_with_disabled', models.BooleanField(default=False, verbose_name='Doświadczenie z niepełnosprawnymi')),
                ('easy_going', models.BooleanField(default=False, verbose_name='Łatwość w nawiązywaniu kontaktu z ludźmi')),
                ('teamwork', models.BooleanField(default=False, verbose_name='Odnajduję się w pracy zespołowej')),
                ('entertaining', models.BooleanField(default=False, verbose_name='Potrafię zorganizować czas innym, zaprosić do zabawy')),
                ('sing_or_play', models.BooleanField(default=False, verbose_name='Gram lub śpiewam')),
                ('photographing', models.BooleanField(default=False, verbose_name='Fotografuję')),
                ('writing_articles', models.BooleanField(default=False, verbose_name='Piszę artykuły')),
                ('it', models.BooleanField(default=False, verbose_name='Zajmuję się IT i mediami społecznościowymi')),
                ('tidiness', models.BooleanField(default=False, verbose_name='Utrzymuję porządek')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='gallery', verbose_name='Zdjęcie')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Wolontariusz',
                'verbose_name_plural': 'Wolontariusze',
            },
        ),
        migrations.AddField(
            model_name='retreatormusictrainingperson',
            name='volunteer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='v', to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='priest',
            name='volunteer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='nurse',
            name='volunteer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nurvol', to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='eventvolunteer',
            name='volunteer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volo', to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='eventparticipant',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partic', to='coordinatepanel.Participant', verbose_name='Podopieczny'),
        ),
        migrations.AddField(
            model_name='event',
            name='nurse',
            field=models.ManyToManyField(blank=True, to='coordinatepanel.Nurse', verbose_name='Pielęgniarze'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='volunteer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docvol', to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='coordinator',
            name='volunteer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='batchvolunteer',
            name='volunteer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vol', to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='batchparticipant',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Participant', verbose_name='Podopieczny'),
        ),
        migrations.AddField(
            model_name='batchparticipant',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dj.Room', verbose_name='Pokój'),
        ),
        migrations.AddField(
            model_name='batchparticipant',
            name='volunteer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Volunteer', verbose_name='Wolontariusz'),
        ),
        migrations.AddField(
            model_name='batch',
            name='auxiliary_coordinator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auxiliary_coordinator', to='coordinatepanel.Coordinator', verbose_name='Koordynator p.'),
        ),
        migrations.AddField(
            model_name='batch',
            name='auxiliary_priest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='auxiliary_priest', to='coordinatepanel.Priest', verbose_name='Rekolekcjonista p.'),
        ),
        migrations.AddField(
            model_name='batch',
            name='doctor',
            field=models.ManyToManyField(blank=True, to='coordinatepanel.Doctor', verbose_name='Lekarze'),
        ),
        migrations.AddField(
            model_name='batch',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Institution', verbose_name='Placówka'),
        ),
        migrations.AddField(
            model_name='batch',
            name='main_coordinator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Coordinator', verbose_name='Koordynator'),
        ),
        migrations.AddField(
            model_name='batch',
            name='main_priest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coordinatepanel.Priest', verbose_name='Rekolekcjonista'),
        ),
        migrations.AddField(
            model_name='batch',
            name='nurse',
            field=models.ManyToManyField(blank=True, to='coordinatepanel.Nurse', verbose_name='Pielęgniarze'),
        ),
    ]
